When would you want to create a remote repository rather than keeping all your work local?

I would create a remote repository to have access to my work on another machine, to 
share my work for collaboration purposes, to have a back up and/or to create a portfolio of my work.  

Why might you want to always pull changes manually rather than having Git automatically stay 
up-to-date with your remote repository?

Manually pulling changes means that I have greater control over the code base that I am working on.
If Git automatically updated my local copy, then it is possible that changes others had made would
interfere with my work and additionally harm productivity by creating more administration in terms
of fixing conflicts. Furthermore, constant updates would add a data transfer overhead which in most
cases is unnecessary.

Describe the differences between forks, clones, and branches. When would you use one instead of 
another?

A clone is a copy of a remote repository that is on you local machine. This is used when I want to 
work on code on my local machine. A fork is like a clone except that it is made via GitHub and makes
a copy of a repository on my GitHub account. This is used when I want to work with someone else's 
work by making a copy of it. GitHub maintains an attribution to the source of the copy. A branch is a 
divergence of commits that is used to make changes without affecting the files in the main branch.
This is useful when working on new features, fixing bugs and experimenting.

What is the benefit of having a copy of the last known state of the remote stored locally?

The benefit is that I can continue to work on my local copy without worrying about what changes 
others have made. Furthermore, if the remote copy was destroyed, it would be able to restore it by
using the local copy on my machine. Finally, from a merge perspective, having the latest known state
would result in fast forward merging when I pushed my code to the remote.